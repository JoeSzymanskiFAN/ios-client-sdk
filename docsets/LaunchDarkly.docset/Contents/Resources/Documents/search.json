{"Structs/ApplicationInfo.html#/s:12LaunchDarkly15ApplicationInfoVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ApplicationInfo"},"Structs/ApplicationInfo.html#/s:12LaunchDarkly15ApplicationInfoV21applicationIdentifieryySSF":{"name":"applicationIdentifier(_:)","abstract":"<p>A unique identifier representing the application where the LaunchDarkly SDK is running.</p>","parent_name":"ApplicationInfo"},"Structs/ApplicationInfo.html#/s:12LaunchDarkly15ApplicationInfoV15applicationNameyySSF":{"name":"applicationName(_:)","abstract":"<p>A human-friendly application name representing the application where the LaunchDarkly SDK is running.</p>","parent_name":"ApplicationInfo"},"Structs/ApplicationInfo.html#/s:12LaunchDarkly15ApplicationInfoV18applicationVersionyySSF":{"name":"applicationVersion(_:)","abstract":"<p>A unique identifier representing the version of the application where the LaunchDarkly SDK","parent_name":"ApplicationInfo"},"Structs/ApplicationInfo.html#/s:12LaunchDarkly15ApplicationInfoV22applicationVersionNameyySSF":{"name":"applicationVersionName(_:)","abstract":"<p>A human-friendly name representing the version of the application where the LaunchDarkly SDK","parent_name":"ApplicationInfo"},"Structs/ApplicationInfo.html":{"name":"ApplicationInfo","abstract":"<p>Defines application metadata.</p>"},"Enums/AutoEnvAttributes.html#/c:@M@LaunchDarkly@E@AutoEnvAttributes@AutoEnvAttributesEnabled":{"name":"enabled","abstract":"<p>Enables the Auto EnvironmentAttributes functionality.</p>","parent_name":"AutoEnvAttributes"},"Enums/AutoEnvAttributes.html#/c:@M@LaunchDarkly@E@AutoEnvAttributes@AutoEnvAttributesDisabled":{"name":"disabled","abstract":"<p>Disables the Auto EnvironmentAttributes functionality.</p>","parent_name":"AutoEnvAttributes"},"Enums/ReferenceError.html#/s:12LaunchDarkly14ReferenceErrorO5emptyyA2CmF":{"name":"empty","abstract":"<p>empty means that you tried to create a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Reference.html\">Reference</a></code> from an empty string, or a string that consisted only of a","parent_name":"ReferenceError"},"Enums/ReferenceError.html#/s:12LaunchDarkly14ReferenceErrorO11doubleSlashyA2CmF":{"name":"doubleSlash","abstract":"<p>doubleSlash means that an attribute reference contained a double slash or trailing slash causing one path","parent_name":"ReferenceError"},"Enums/ReferenceError.html#/s:12LaunchDarkly14ReferenceErrorO21invalidEscapeSequenceyA2CmF":{"name":"invalidEscapeSequence","abstract":"<p>invalidEscapeSequence means that an attribute reference contained contained a &ldquo;~&rdquo; character that was not","parent_name":"ReferenceError"},"Enums/ReferenceError.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"ReferenceError"},"Enums/ReferenceError.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"ReferenceError"},"Enums/ReferenceError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"ReferenceError"},"Enums/ContextBuilderError.html#/s:12LaunchDarkly19ContextBuilderErrorO11invalidKindyA2CmF":{"name":"invalidKind","abstract":"<p>The provided kind either contains invalid characters, or is the disallowed kind &ldquo;kind&rdquo;.</p>","parent_name":"ContextBuilderError"},"Enums/ContextBuilderError.html#/s:12LaunchDarkly19ContextBuilderErrorO013requiresMultiD0yA2CmF":{"name":"requiresMultiBuilder","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDMultiContextBuilder.html\">LDMultiContextBuilder</a></code> must be used when attempting to build a multi-context.</p>","parent_name":"ContextBuilderError"},"Enums/ContextBuilderError.html#/s:12LaunchDarkly19ContextBuilderErrorO8emptyKeyyA2CmF":{"name":"emptyKey","abstract":"<p>The JSON representations for the context was missing the &ldquo;key&rdquo; property.</p>","parent_name":"ContextBuilderError"},"Enums/ContextBuilderError.html#/s:12LaunchDarkly19ContextBuilderErrorO14emptyMultiKindyA2CmF":{"name":"emptyMultiKind","abstract":"<p>Attempted to build a multi-context without providing any contexts.</p>","parent_name":"ContextBuilderError"},"Enums/ContextBuilderError.html#/s:12LaunchDarkly19ContextBuilderErrorO15nestedMultiKindyA2CmF":{"name":"nestedMultiKind","abstract":"<p>A multi-context cannot contain another multi-context.</p>","parent_name":"ContextBuilderError"},"Enums/ContextBuilderError.html#/s:12LaunchDarkly19ContextBuilderErrorO14duplicateKindsyA2CmF":{"name":"duplicateKinds","abstract":"<p>Attempted to build a multi-context containing 2 or more contexts with the same kind.</p>","parent_name":"ContextBuilderError"},"Enums/Kind.html#/s:12LaunchDarkly4KindO4useryA2CmF":{"name":"user","abstract":"<p>user is both the default Kind and also the kind used for legacy users in earlier versions of this SDK.</p>","parent_name":"Kind"},"Enums/Kind.html#/s:12LaunchDarkly4KindO5multiyA2CmF":{"name":"multi","abstract":"<p>multi is only usable by constructing a multi-context using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDMultiContextBuilder.html\">LDMultiContextBuilder</a></code>. Attempting to set","parent_name":"Kind"},"Enums/Kind.html#/s:12LaunchDarkly4KindO6customyACSScACmF":{"name":"custom(_:)","abstract":"<p>The custom case handles arbitrarily defined contexts (e.g. org, account, server).</p>","parent_name":"Kind"},"Enums/Kind.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"Kind"},"Enums/Kind.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"Kind"},"Enums/Kind.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Kind"},"Enums/Kind.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Kind"},"Enums/Kind.html#/s:s25LosslessStringConvertiblePyxSgSScfc":{"name":"init(_:)","parent_name":"Kind"},"Enums/Kind.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Kind"},"Enums/Kind.html":{"name":"Kind","abstract":"<p>Kind is an enumeration set by the application to describe what kind of entity an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code>"},"Enums/ContextBuilderError.html":{"name":"ContextBuilderError","abstract":"<p>Enumeration representing various modes of failures when constructing an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code>.</p>"},"Enums/ReferenceError.html":{"name":"ReferenceError","abstract":"<p>An enumeration describing the individual failure conditions which may occur when constructing a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Reference.html\">Reference</a></code>.</p>"},"Enums/AutoEnvAttributes.html":{"name":"AutoEnvAttributes","abstract":"<p>Enable / disable options for Auto Environment Attributes functionality. When enabled, the SDK will automatically"},"Classes/ObjcLDReferenceError.html#/c:@M@LaunchDarkly@objc(cs)ReferenceError(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDReferenceError"},"Classes/ContextBuilderResult.html#/c:@M@LaunchDarkly@objc(cs)ContextBuilderResult(py)success":{"name":"success","abstract":"<p>Undocumented</p>","parent_name":"ContextBuilderResult"},"Classes/ContextBuilderResult.html#/c:@M@LaunchDarkly@objc(cs)ContextBuilderResult(py)failure":{"name":"failure","abstract":"<p>Undocumented</p>","parent_name":"ContextBuilderResult"},"Classes/ContextBuilderResult.html#/s:12LaunchDarkly20ContextBuilderResultC11fromSuccessyAcA9LDContextVFZ":{"name":"fromSuccess(_:)","abstract":"<p>Create a &ldquo;success&rdquo; result with the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code>.</p>","parent_name":"ContextBuilderResult"},"Classes/ContextBuilderResult.html#/s:12LaunchDarkly20ContextBuilderResultC9fromErroryAcA0cdG0OFZ":{"name":"fromError(_:)","abstract":"<p>Create an &ldquo;error&rdquo; result with the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code>.</p>","parent_name":"ContextBuilderResult"},"Classes/ObjcLDMultiContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDMultiContextBuilder(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDMultiContextBuilder"},"Classes/ObjcLDMultiContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDMultiContextBuilder(im)addContextWithContext:":{"name":"addContext(context:)","abstract":"<p>Adds a nested context for a specific kind to a LDMultiContextBuilder.</p>","parent_name":"ObjcLDMultiContextBuilder"},"Classes/ObjcLDMultiContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDMultiContextBuilder(im)build":{"name":"build()","abstract":"<p>Creates a LDContext from the current properties.</p>","parent_name":"ObjcLDMultiContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)init":{"name":"init()","abstract":"<p>Create a new LDContextBuilder.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)initWithKey:":{"name":"init(key:)","abstract":"<p>Create a new LDContextBuilder with the provided <code>key</code>.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)kindWithKind:":{"name":"kind(kind:)","abstract":"<p>Sets the LDContext&rsquo;s kind attribute.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)keyWithKey:":{"name":"key(key:)","abstract":"<p>Sets the LDContext&rsquo;s key attribute.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)nameWithName:":{"name":"name(name:)","abstract":"<p>Sets the LDContext&rsquo;s name attribute.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)anonymousWithAnonymous:":{"name":"anonymous(anonymous:)","abstract":"<p>Sets whether the LDContext is only intended for flag evaluations and should not be indexed by","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)addPrivateAttributeWithReference:":{"name":"addPrivateAttribute(reference:)","abstract":"<p>Provide a reference to designate any number of LDContext attributes as private: that is,","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)removePrivateAttributeWithReference:":{"name":"removePrivateAttribute(reference:)","abstract":"<p>Remove any reference provided through <code>addPrivateAttribute(_:)</code>. If the reference was","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)trySetValueWithName:value:":{"name":"trySetValue(name:value:)","abstract":"<p>Sets the value of any attribute for the Context except for private attributes.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDContextBuilder.html#/c:@M@LaunchDarkly@objc(cs)LDContextBuilder(im)build":{"name":"build()","abstract":"<p>Creates a LDContext from the current LDContextBuilder properties.</p>","parent_name":"ObjcLDContextBuilder"},"Classes/ObjcLDApplicationInfo.html#/c:@M@LaunchDarkly@objc(cs)LDApplicationInfo(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDApplicationInfo"},"Classes/ObjcLDApplicationInfo.html#/c:@M@LaunchDarkly@objc(cs)LDApplicationInfo(im)applicationIdentifier:":{"name":"applicationIdentifier(_:)","abstract":"<p>A unique identifier representing the application where the LaunchDarkly SDK is running.</p>","parent_name":"ObjcLDApplicationInfo"},"Classes/ObjcLDApplicationInfo.html#/c:@M@LaunchDarkly@objc(cs)LDApplicationInfo(im)applicationName:":{"name":"applicationName(_:)","abstract":"<p>A human-friendly application name representing the application where the LaunchDarkly SDK is running.</p>","parent_name":"ObjcLDApplicationInfo"},"Classes/ObjcLDApplicationInfo.html#/c:@M@LaunchDarkly@objc(cs)LDApplicationInfo(im)applicationVersion:":{"name":"applicationVersion(_:)","abstract":"<p>A unique identifier representing the version of the application where the LaunchDarkly SDK","parent_name":"ObjcLDApplicationInfo"},"Classes/ObjcLDApplicationInfo.html#/c:@M@LaunchDarkly@objc(cs)LDApplicationInfo(im)applicationVersionName:":{"name":"applicationVersionName(_:)","abstract":"<p>A human-friendly name representing the version of the application where the LaunchDarkly SDK","parent_name":"ObjcLDApplicationInfo"},"Classes/ObjcLDApplicationInfo.html":{"name":"ObjcLDApplicationInfo","abstract":"<p>Use LDApplicationInfo to define application metadata.</p>"},"Classes/ObjcLDContextBuilder.html":{"name":"ObjcLDContextBuilder","abstract":"<p>Contains methods for building a single kind <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code> with a specified key, defaulting to kind"},"Classes/ObjcLDMultiContextBuilder.html":{"name":"ObjcLDMultiContextBuilder","abstract":"<p>Contains method for building a multi-context.</p>"},"Classes/ContextBuilderResult.html":{"name":"ContextBuilderResult","abstract":"<p>An NSObject which mimics Swift&rsquo;s Result type, specifically for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code> type.</p>"},"Classes/ObjcLDReferenceError.html":{"name":"ObjcLDReferenceError","abstract":"<p>Undocumented</p>"},"changelog.html":{"name":"CHANGELOG"},"contributing.html":{"name":"CONTRIBUTING"},"licensetxt.html":{"name":"LICENSE.txt"},"Classes/ObjcLDJSONEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDJSONEvaluationDetail(py)value":{"name":"value","abstract":"<p>The value of the flag for the current context.</p>","parent_name":"ObjcLDJSONEvaluationDetail"},"Classes/ObjcLDJSONEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDJSONEvaluationDetail(py)variationIndex":{"name":"variationIndex","abstract":"<p>The index of the returned value within the flag&rsquo;s list of variations, or <code>-1</code> if the default was returned.</p>","parent_name":"ObjcLDJSONEvaluationDetail"},"Classes/ObjcLDJSONEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDJSONEvaluationDetail(py)reason":{"name":"reason","abstract":"<p>A structure representing the main factor that influenced the resultant flag evaluation value.</p>","parent_name":"ObjcLDJSONEvaluationDetail"},"Classes/ObjcLDStringEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDStringEvaluationDetail(py)value":{"name":"value","abstract":"<p>The value of the flag for the current context.</p>","parent_name":"ObjcLDStringEvaluationDetail"},"Classes/ObjcLDStringEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDStringEvaluationDetail(py)variationIndex":{"name":"variationIndex","abstract":"<p>The index of the returned value within the flag&rsquo;s list of variations, or <code>-1</code> if the default was returned.</p>","parent_name":"ObjcLDStringEvaluationDetail"},"Classes/ObjcLDStringEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDStringEvaluationDetail(py)reason":{"name":"reason","abstract":"<p>A structure representing the main factor that influenced the resultant flag evaluation value.</p>","parent_name":"ObjcLDStringEvaluationDetail"},"Classes/ObjcLDDoubleEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleEvaluationDetail(py)value":{"name":"value","abstract":"<p>The value of the flag for the current context.</p>","parent_name":"ObjcLDDoubleEvaluationDetail"},"Classes/ObjcLDDoubleEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleEvaluationDetail(py)variationIndex":{"name":"variationIndex","abstract":"<p>The index of the returned value within the flag&rsquo;s list of variations, or <code>-1</code> if the default was returned.</p>","parent_name":"ObjcLDDoubleEvaluationDetail"},"Classes/ObjcLDDoubleEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleEvaluationDetail(py)reason":{"name":"reason","abstract":"<p>A structure representing the main factor that influenced the resultant flag evaluation value.</p>","parent_name":"ObjcLDDoubleEvaluationDetail"},"Classes/ObjcLDIntegerEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerEvaluationDetail(py)value":{"name":"value","abstract":"<p>The value of the flag for the current context.</p>","parent_name":"ObjcLDIntegerEvaluationDetail"},"Classes/ObjcLDIntegerEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerEvaluationDetail(py)variationIndex":{"name":"variationIndex","abstract":"<p>The index of the returned value within the flag&rsquo;s list of variations, or <code>-1</code> if the default was returned.</p>","parent_name":"ObjcLDIntegerEvaluationDetail"},"Classes/ObjcLDIntegerEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerEvaluationDetail(py)reason":{"name":"reason","abstract":"<p>A structure representing the main factor that influenced the resultant flag evaluation value.</p>","parent_name":"ObjcLDIntegerEvaluationDetail"},"Classes/ObjcLDBoolEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDBoolEvaluationDetail(py)value":{"name":"value","abstract":"<p>The value of the flag for the current context.</p>","parent_name":"ObjcLDBoolEvaluationDetail"},"Classes/ObjcLDBoolEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDBoolEvaluationDetail(py)variationIndex":{"name":"variationIndex","abstract":"<p>The index of the returned value within the flag&rsquo;s list of variations, or <code>-1</code> if the default was returned.</p>","parent_name":"ObjcLDBoolEvaluationDetail"},"Classes/ObjcLDBoolEvaluationDetail.html#/c:@M@LaunchDarkly@objc(cs)LDBoolEvaluationDetail(py)reason":{"name":"reason","abstract":"<p>A structure representing the main factor that influenced the resultant flag evaluation value.</p>","parent_name":"ObjcLDBoolEvaluationDetail"},"Classes/ObjcLDBoolEvaluationDetail.html":{"name":"ObjcLDBoolEvaluationDetail","abstract":"<p>Structure that contains the evaluation result and additional information when evaluating a flag as a boolean.</p>"},"Classes/ObjcLDIntegerEvaluationDetail.html":{"name":"ObjcLDIntegerEvaluationDetail","abstract":"<p>Structure that contains the evaluation result and additional information when evaluating a flag as an integer.</p>"},"Classes/ObjcLDDoubleEvaluationDetail.html":{"name":"ObjcLDDoubleEvaluationDetail","abstract":"<p>Structure that contains the evaluation result and additional information when evaluating a flag as a double.</p>"},"Classes/ObjcLDStringEvaluationDetail.html":{"name":"ObjcLDStringEvaluationDetail","abstract":"<p>Structure that contains the evaluation result and additional information when evaluating a flag as a string.</p>"},"Classes/ObjcLDJSONEvaluationDetail.html":{"name":"ObjcLDJSONEvaluationDetail","abstract":"<p>Structure that contains the evaluation result and additional information when evaluating a flag as a JSON value.</p>"},"Enums/ObjcLDValueType.html#/c:@M@LaunchDarkly@E@LDValueType@LDValueTypeNull":{"name":"null","abstract":"<p>The value returned by <code>LDValue.getType()</code> when the represented value is a null.</p>","parent_name":"ObjcLDValueType"},"Enums/ObjcLDValueType.html#/c:@M@LaunchDarkly@E@LDValueType@LDValueTypeBool":{"name":"bool","abstract":"<p>The value returned by <code>LDValue.getType()</code> when the represented value is a boolean.</p>","parent_name":"ObjcLDValueType"},"Enums/ObjcLDValueType.html#/c:@M@LaunchDarkly@E@LDValueType@LDValueTypeNumber":{"name":"number","abstract":"<p>The value returned by <code>LDValue.getType()</code> when the represented value is a number.</p>","parent_name":"ObjcLDValueType"},"Enums/ObjcLDValueType.html#/c:@M@LaunchDarkly@E@LDValueType@LDValueTypeString":{"name":"string","abstract":"<p>The value returned by <code>LDValue.getType()</code> when the represented value is a string.</p>","parent_name":"ObjcLDValueType"},"Enums/ObjcLDValueType.html#/c:@M@LaunchDarkly@E@LDValueType@LDValueTypeArray":{"name":"array","abstract":"<p>The value returned by <code>LDValue.getType()</code> when the represented value is an array.</p>","parent_name":"ObjcLDValueType"},"Enums/ObjcLDValueType.html#/c:@M@LaunchDarkly@E@LDValueType@LDValueTypeObject":{"name":"object","abstract":"<p>The value returned by <code>LDValue.getType()</code> when the represented value is an object.</p>","parent_name":"ObjcLDValueType"},"Classes/ObjcLDValue.html#/s:12LaunchDarkly11ObjcLDValueC12wrappedValueAA0D0Ovp":{"name":"wrappedValue","abstract":"<p>The Swift <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> enum the instance is wrapping.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/s:12LaunchDarkly11ObjcLDValueC12wrappedValueAcA0D0O_tcfc":{"name":"init(wrappedValue:)","abstract":"<p>Create a instance of the bridging object for the given value.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(cm)ofNull":{"name":"ofNull()","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> that represents a JSON null.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(cm)ofBool:":{"name":"of(bool:)","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> from a boolean value.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(cm)ofNumber:":{"name":"of(number:)","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> from a numeric value.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(cm)ofString:":{"name":"of(string:)","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> from a string value.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(cm)ofArray:":{"name":"of(array:)","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> from an array of values.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(cm)ofDict:":{"name":"of(dict:)","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> object from dictionary of values.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(im)getType":{"name":"getType()","abstract":"<p>Get the type of the value.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(im)boolValue":{"name":"boolValue()","abstract":"<p>Get the value as a <code>Bool</code>.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(im)doubleValue":{"name":"doubleValue()","abstract":"<p>Get the value as a <code>Double</code>.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(im)stringValue":{"name":"stringValue()","abstract":"<p>Get the value as a <code>String</code>.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(im)arrayValue":{"name":"arrayValue()","abstract":"<p>Get the value as an array.</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDValue.html#/c:@M@LaunchDarkly@objc(cs)LDValue(im)dictValue":{"name":"dictValue()","abstract":"<p>Get the value as a dictionary representing the JSON object</p>","parent_name":"ObjcLDValue"},"Classes/ObjcLDChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDChangedFlag(py)key":{"name":"key","abstract":"<p>The changed feature flag&rsquo;s key</p>","parent_name":"ObjcLDChangedFlag"},"Classes/ObjcLDChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>The value from before the flag change occurred.</p>","parent_name":"ObjcLDChangedFlag"},"Classes/ObjcLDChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>The value after the flag change occurred.</p>","parent_name":"ObjcLDChangedFlag"},"Classes/ObjcLDContext.html#/c:@M@LaunchDarkly@objc(cs)LDContext(im)fullyQualifiedKey":{"name":"fullyQualifiedKey()","abstract":"<p>FullyQualifiedKey returns a string that describes the entire Context based on Kind and Key values.</p>","parent_name":"ObjcLDContext"},"Classes/ObjcLDContext.html#/c:@M@LaunchDarkly@objc(cs)LDContext(im)isMulti":{"name":"isMulti()","parent_name":"ObjcLDContext"},"Classes/ObjcLDContext.html#/c:@M@LaunchDarkly@objc(cs)LDContext(im)contextKeys":{"name":"contextKeys()","abstract":"<p>/ - Returns: A hash mapping a context&rsquo;s kind to its key.</p>","parent_name":"ObjcLDContext"},"Classes/ObjcLDContext.html#/c:@M@LaunchDarkly@objc(cs)LDContext(im)getValueWithReference:":{"name":"getValue(reference:)","abstract":"<p>Looks up the value of any attribute of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code>, or a value contained within an","parent_name":"ObjcLDContext"},"Classes/ObjcLDReference.html#/c:@M@LaunchDarkly@objc(cs)Reference(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDReference"},"Classes/ObjcLDReference.html#/c:@M@LaunchDarkly@objc(cs)Reference(im)isValid":{"name":"isValid()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDReference"},"Classes/ObjcLDReference.html#/c:@M@LaunchDarkly@objc(cs)Reference(im)getError":{"name":"getError()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDReference"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)mobileKey":{"name":"mobileKey","abstract":"<p>The Mobile key from your <a href=\"app.launchdarkly.com\">LaunchDarkly Account</a> settings (on the left at the bottom). If you have multiple projects be sure to choose the correct Mobile key.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)baseUrl":{"name":"baseUrl","abstract":"<p>The url for making feature flag requests. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)eventsUrl":{"name":"eventsUrl","abstract":"<p>The url for making event reports. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)streamUrl":{"name":"streamUrl","abstract":"<p>The url for connecting to the <em>clientstream</em>. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)eventCapacity":{"name":"eventCapacity","abstract":"<p>The maximum number of analytics events the LDClient can store. When the LDClient event store reaches the eventCapacity, the SDK discards events until it successfully reports them to LaunchDarkly. (Default: 100)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)connectionTimeout":{"name":"connectionTimeout","abstract":"<p>The timeout interval for flag requests and event reports. (Default: 10 seconds)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)eventFlushInterval":{"name":"eventFlushInterval","abstract":"<p>The time interval between event reports (Default: 30 seconds)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)flagPollingInterval":{"name":"flagPollingInterval","abstract":"<p>The interval between feature flag requests. Used only for polling mode. (Default: 5 minutes)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)backgroundFlagPollingInterval":{"name":"backgroundFlagPollingInterval","abstract":"<p>The interval between feature flag requests while running in the background. Used only for polling mode. (Default: 60 minutes)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)applicationInfo":{"name":"applicationInfo","abstract":"<p>The application info meta data.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)minFlagPollingInterval":{"name":"minFlagPollingInterval","abstract":"<p>The minimum interval between feature flag requests. Used only for polling mode. (5 minutes)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)minBackgroundFlagPollInterval":{"name":"minBackgroundFlagPollInterval","abstract":"<p>The minimum interval between feature flag requests while running in the background. Used only for polling mode. (15 minutes)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)streamingMode":{"name":"streamingMode","abstract":"<p>Controls the method the SDK uses to keep feature flags updated. When set to .streaming, connects to <code>clientstream</code> which notifies the SDK of feature flag changes. When set to .polling, an efficient polling mechanism is used to periodically request feature flag values. Ignored for watchOS, which always uses .polling. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDStreamingMode.html\">LDStreamingMode</a></code> for more details. (Default: .streaming)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)enableBackgroundUpdates":{"name":"enableBackgroundUpdates","abstract":"<p>Enables feature flag updates when your app is in the background. Allowed on macOS only. (Default: NO)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)startOnline":{"name":"startOnline","abstract":"<p>Controls LDClient start behavior. When YES, calling start causes LDClient to go online. When NO, calling start causes LDClient to remain offline. If offline at start, set the client online to receive flag updates. (Default: YES)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)allContextAttributesPrivate":{"name":"allContextAttributesPrivate","abstract":"<p>Treat all context attributes as private for event reporting for all contexts.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)privateContextAttributes":{"name":"privateContextAttributes","abstract":"<p>Context attributes and top level custom dictionary keys to treat as private for event reporting for all contexts.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)useReport":{"name":"useReport","abstract":"<p>Directs the SDK to use REPORT for HTTP requests to connect to <code>clientstream</code> and make feature flag requests. When NO the SDK uses GET for these requests. Do not use unless advised by LaunchDarkly. (Default: NO)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)debugMode":{"name":"debugMode","abstract":"<p>Enables logging for debugging. (Default: NO)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)evaluationReasons":{"name":"evaluationReasons","abstract":"<p>Enables requesting evaluation reasons for all flags. (Default: NO)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)maxCachedContexts":{"name":"maxCachedContexts","abstract":"<p>An Integer that tells ContextEnvironmentFlagCache the maximum number of contexts to locally cache. Can be set to -1 for unlimited cached contexts. (Default: 5)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)diagnosticOptOut":{"name":"diagnosticOptOut","abstract":"<p>Set to true to opt out of sending diagnostic data. (Default: false)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)diagnosticRecordingInterval":{"name":"diagnosticRecordingInterval","abstract":"<p>The interval between sending periodic diagnostic data. (Default: 15 minutes)</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)wrapperName":{"name":"wrapperName","abstract":"<p>For use by wrapper libraries to set an identifying name for the wrapper being used. This will be sent in the &ldquo;X-LaunchDarkly-Wrapper&rdquo; header on requests to the LaunchDarkly servers to allow recording metrics on the usage of these wrapper libraries.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)wrapperVersion":{"name":"wrapperVersion","abstract":"<p>For use by wrapper libraries to report the version of the library in use. If the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)wrapperName\">wrapperName</a></code> has not been set this field will be ignored. Otherwise the verison strill will be included with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)wrapperName\">wrapperName</a></code> in the &ldquo;X-LaunchDarkly-Wrapper&rdquo; header on requests to the LaunchDarkly servers.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(im)getSecondaryMobileKeys":{"name":"getSecondaryMobileKeys()","abstract":"<p>Returns a Dictionary of identifying names to unique mobile keys to access secondary environments.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(im)setSecondaryMobileKeys:error:":{"name":"setSecondaryMobileKeys(_:)","abstract":"<p>Sets a Dictionary of identifying names to unique mobile keys to access secondary environments in the LDConfig. Throws if you try to add duplicate keys or put the primary key or name in secondaryMobileKeys.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(im)initWithMobileKey:autoEnvAttributes:":{"name":"init(mobileKey:autoEnvAttributes:)","abstract":"<p>LDConfig constructor. Configurable values are all set to their default values. The client app can modify these values as desired. Note that client app developers may prefer to get the LDConfig from <code>LDClient.config</code> (<code>ObjcLDClient.config</code>) in order to retain previously set values.</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(im)isEqualWithObject:":{"name":"isEqual(object:)","abstract":"<p>Compares the settable properties in 2 LDConfig structs</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(py)isOnline":{"name":"isOnline","abstract":"<p>Reports the online/offline state of the LDClient.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)setOnline:":{"name":"setOnline(_:)","abstract":"<p>Set the LDClient online/offline.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)setOnline:completion:":{"name":"setOnline(_:completion:)","abstract":"<p>Set the LDClient online/offline.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(py)isInitialized":{"name":"isInitialized","abstract":"<p>Reports the initialization state of the LDClient.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)identifyWithContext:":{"name":"identify(context:)","abstract":"<p>The LDContext set into the LDClient may affect the set of feature flags returned by the LaunchDarkly server, and ties event tracking to the context. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code> for details about what information can be retained.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)identifyWithContext:completion:":{"name":"identify(context:completion:)","abstract":"<p>The LDContext set into the LDClient may affect the set of feature flags returned by the LaunchDarkly server, and ties event tracking to the context. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code> for details about what information can be retained.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)close":{"name":"close()","abstract":"<p>Stops the LDClient. Stopping the client means the LDClient goes offline and stops recording events. LDClient will no longer provide feature flag values, only returning default values.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(cm)get":{"name":"get()","abstract":"<p>Returns an ObjcLDClient wrapper that contains the primary LDClient instance.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(cm)getWithEnvironment:":{"name":"get(environment:)","abstract":"<p>Returns an LDClient instance for a given environment.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)boolVariationForKey:defaultValue:":{"name":"boolVariation(forKey:defaultValue:)","abstract":"<p>Returns the BOOL variation for the given feature flag. If the flag does not exist, cannot be cast to a BOOL, or the LDClient is not started, returns the default value.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)boolVariationDetailForKey:defaultValue:":{"name":"boolVariationDetail(forKey:defaultValue:)","abstract":"<p>See <a href=\"x-source-tag://boolVariation\">boolVariation</a> for more information on variation methods.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)integerVariationForKey:defaultValue:":{"name":"integerVariation(forKey:defaultValue:)","abstract":"<p>Returns the NSInteger variation for the given feature flag. If the flag does not exist, cannot be cast to a NSInteger, or the LDClient is not started, returns the default value.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)integerVariationDetailForKey:defaultValue:":{"name":"integerVariationDetail(forKey:defaultValue:)","abstract":"<p>See <a href=\"x-source-tag://integerVariation\">integerVariation</a> for more information on variation methods.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)doubleVariationForKey:defaultValue:":{"name":"doubleVariation(forKey:defaultValue:)","abstract":"<p>Returns the double variation for the given feature flag. If the flag does not exist, cannot be cast to a double, or the LDClient is not started, returns the default value.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)doubleVariationDetailForKey:defaultValue:":{"name":"doubleVariationDetail(forKey:defaultValue:)","abstract":"<p>See <a href=\"x-source-tag://doubleVariation\">doubleVariation</a> for more information on variation methods.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)stringVariationForKey:defaultValue:":{"name":"stringVariation(forKey:defaultValue:)","abstract":"<p>Returns the NSString variation for the given feature flag. If the flag does not exist, cannot be cast to a NSString, or the LDClient is not started, returns the default value.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)stringVariationDetailForKey:defaultValue:":{"name":"stringVariationDetail(forKey:defaultValue:)","abstract":"<p>See <a href=\"x-source-tag://stringVariation\">stringVariation</a> for more information on variation methods.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)jsonVariationForKey:defaultValue:":{"name":"jsonVariation(forKey:defaultValue:)","abstract":"<p>Returns the JSON variation for the given feature flag. If the flag does not exist, or the LDClient is not started, returns the default value.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)jsonVariationDetailForKey:defaultValue:":{"name":"jsonVariationDetail(forKey:defaultValue:)","abstract":"<p>See <a href=\"x-source-tag://arrayVariation\">arrayVariation</a> for more information on variation methods.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(py)allFlags":{"name":"allFlags","abstract":"<p>Returns a dictionary with the flag keys and their values. If the LDClient is not started, returns nil.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observe:owner:handler:":{"name":"observe(_:owner:handler:)","abstract":"<p>Sets a handler for the specified BOOL flag key executed on the specified owner. If the flag&rsquo;s value changes, executes the handler, passing in the <code>changedFlag</code> containing the old and new flag values. See <code>ObjcLDBoolChangedFlag</code> for details.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeKeys:owner:handler:":{"name":"observeKeys(_:owner:handler:)","abstract":"<p>Sets a handler for the specified flag keys executed on the specified owner. If any observed flag&rsquo;s value changes, executes the handler 1 time, passing in a dictionary of <NSString*, LDChangedFlag*> containing the old and new flag values. See LDChangedFlag (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ObjcLDChangedFlag.html\">ObjcLDChangedFlag</a></code>) for details.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeAllKeysWithOwner:handler:":{"name":"observeAllKeys(owner:handler:)","abstract":"<p>Sets a handler for all flag keys executed on the specified owner. If any flag&rsquo;s value changes, executes the handler 1 time, passing in a dictionary of <NSString*, LDChangedFlag*> containing the old and new flag values. See LDChangedFlag (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ObjcLDChangedFlag.html\">ObjcLDChangedFlag</a></code>) for details.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeFlagsUnchangedWithOwner:handler:":{"name":"observeFlagsUnchanged(owner:handler:)","abstract":"<p>Sets a handler executed when a flag update leaves the flags unchanged from their previous values.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)stopObservingForOwner:":{"name":"stopObserving(owner:)","abstract":"<p>Removes all observers for the given owner, including a flagsUnchangedObserver</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/s:12LaunchDarkly12ObjcLDClientC0C20LDChangedFlagHandlera":{"name":"ObjcLDChangedFlagHandler","abstract":"<p>Handler passed to the client app when a feature flag value changes</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/s:12LaunchDarkly12ObjcLDClientC0C30LDChangedFlagCollectionHandlera":{"name":"ObjcLDChangedFlagCollectionHandler","abstract":"<p>Handler passed to the client app when a NSArray feature flag value changes</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)trackWithKey:data:":{"name":"track(key:data:)","abstract":"<p>Adds a custom event to the LDClient event store. A client app can set a tracking event to allow client customized data analysis. Once an app has called <code>track</code>, the app cannot remove the event from the event store.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)trackWithKey:data:metricValue:":{"name":"track(key:data:metricValue:)","abstract":"<p>See (track)[x-source-tag://track] for full documentation.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)flush":{"name":"flush()","abstract":"<p>Tells the SDK to immediately send any currently queued events to LaunchDarkly.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(cm)startWithConfiguration:context:completion:":{"name":"start(configuration:context:completion:)","abstract":"<p>Starts the LDClient using the passed in <code>config</code> &amp; <code>context</code>. Call this before requesting feature flag values. The LDClient will not go online until you call this method.","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(cm)startWithConfiguration:context:startWaitSeconds:completion:":{"name":"start(configuration:context:startWaitSeconds:completion:)","abstract":"<p>See <a href=\"x-source-tag://start\">start</a> for more information on starting the SDK.</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html":{"name":"ObjcLDClient","abstract":"<p>The LDClient is the heart of the SDK, providing client apps running iOS, watchOS, macOS, or tvOS access to LaunchDarkly services. This singleton provides the ability to set a configuration (LDConfig) that controls how the LDClient talks to LaunchDarkly servers, and a context (LDContext) that provides finer control on the feature flag values delivered to LDClient. Once the LDClient has started, it connects to LaunchDarkly&rsquo;s servers to get the feature flag values you set in the Dashboard.</p>"},"Classes/ObjcLDConfig.html":{"name":"ObjcLDConfig","abstract":"<p>Use LDConfig to configure the LDClient. When initialized, a LDConfig contains the default values which can be changed as needed.</p>"},"Classes/ObjcLDReference.html":{"name":"ObjcLDReference","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDContext.html":{"name":"ObjcLDContext","abstract":"<p>LDContext is a collection of attributes that can be referenced in flag evaluations and analytics"},"Classes/ObjcLDChangedFlag.html":{"name":"ObjcLDChangedFlag","abstract":"<p>Collects the elements of a feature flag that changed as a result of a <code>clientstream</code> update or feature flag request. The SDK will pass a typed ObjcLDChangedFlag or a collection of ObjcLDChangedFlags into feature flag observer blocks. This is the base type for the typed ObjcLDChangedFlags passed into observer blocks. The client app will have to convert the ObjcLDChangedFlag into the expected typed ObjcLDChangedFlag type.</p>"},"Classes/ObjcLDValue.html":{"name":"ObjcLDValue","abstract":"<p>Bridged <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code> type for Objective-C.</p>"},"Enums/ObjcLDValueType.html":{"name":"ObjcLDValueType","abstract":"<p>Used to represent the type of an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDValue.html\">LDValue</a></code>.</p>"},"Classes/LDInvalidArgumentError.html#/s:12LaunchDarkly22LDInvalidArgumentErrorC20localizedDescriptionSSvp":{"name":"localizedDescription","abstract":"<p>A description of the error.</p>","parent_name":"LDInvalidArgumentError"},"Enums/LDStreamingMode.html#/s:12LaunchDarkly15LDStreamingModeO9streamingyA2CmF":{"name":"streaming","abstract":"<p>In streaming mode, the SDK uses a streaming connection to receive feature flag data from LaunchDarkly. When a flag","parent_name":"LDStreamingMode"},"Enums/LDStreamingMode.html#/s:12LaunchDarkly15LDStreamingModeO7pollingyA2CmF":{"name":"polling","abstract":"<p>In polling mode, the SDK requests feature flag data from the LaunchDarkly service at regular intervals defined in","parent_name":"LDStreamingMode"},"Enums/LDStreamingMode.html":{"name":"LDStreamingMode","abstract":"<p>Defines the connection modes the SDK may be configured to use to retrieve feature flag data from LaunchDarkly.</p>"},"Other%20Types.html#/s:12LaunchDarkly9LDFlagKeya":{"name":"LDFlagKey","abstract":"<p>The feature flag key is a String. This typealias helps define where the SDK expects the string to be a feature flag key.</p>"},"Classes/LDInvalidArgumentError.html":{"name":"LDInvalidArgumentError","abstract":"<p>An error thrown from APIs when an invalid argument is provided.</p>"},"Other%20Types.html#/s:12LaunchDarkly22RequestHeaderTransforma":{"name":"RequestHeaderTransform","abstract":"<p>A callback for dynamically setting http headers when connection &amp; reconnecting to a stream"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:12LaunchDarkly21ConnectionInformationV04LastC13FailureReasonO12unauthorizedyA2EmF":{"name":"unauthorized","abstract":"<p>Undocumented</p>","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:12LaunchDarkly21ConnectionInformationV04LastC13FailureReasonO9httpErroryAESicAEmF":{"name":"httpError(_:)","abstract":"<p>Undocumented</p>","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:12LaunchDarkly21ConnectionInformationV04LastC13FailureReasonO12unknownErroryAESScAEmF":{"name":"unknownError(_:)","abstract":"<p>Undocumented</p>","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:12LaunchDarkly21ConnectionInformationV04LastC13FailureReasonO4noneyA2EmF":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:12LaunchDarkly21ConnectionInformationV04LastC13FailureReasonO4fromAEs7Decoder_p_tKcfc":{"name":"init(from:)","abstract":"<p>Decode a ConnectionInformation.LastConnectionFailureReason enum using Codable</p>","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/LastConnectionFailureReason.html#/s:12LaunchDarkly21ConnectionInformationV04LastC13FailureReasonO6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Encode a ConnectionInformation.LastConnectionFailureReason enum using Codable</p>","parent_name":"LastConnectionFailureReason"},"Structs/ConnectionInformation/ConnectionMode.html#/s:12LaunchDarkly21ConnectionInformationV0C4ModeO9streamingyA2EmF":{"name":"streaming","abstract":"<p>Undocumented</p>","parent_name":"ConnectionMode"},"Structs/ConnectionInformation/ConnectionMode.html#/s:12LaunchDarkly21ConnectionInformationV0C4ModeO7offlineyA2EmF":{"name":"offline","abstract":"<p>Undocumented</p>","parent_name":"ConnectionMode"},"Structs/ConnectionInformation/ConnectionMode.html#/s:12LaunchDarkly21ConnectionInformationV0C4ModeO021establishingStreamingC0yA2EmF":{"name":"establishingStreamingConnection","abstract":"<p>Undocumented</p>","parent_name":"ConnectionMode"},"Structs/ConnectionInformation/ConnectionMode.html#/s:12LaunchDarkly21ConnectionInformationV0C4ModeO7pollingyA2EmF":{"name":"polling","abstract":"<p>Undocumented</p>","parent_name":"ConnectionMode"},"Structs/ConnectionInformation/ConnectionMode.html":{"name":"ConnectionMode","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation/LastConnectionFailureReason.html":{"name":"LastConnectionFailureReason","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html#/s:12LaunchDarkly21ConnectionInformationV9ConstantsV":{"name":"Constants","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html#/s:12LaunchDarkly21ConnectionInformationV21lastKnownFlagValidity10Foundation4DateVSgvp":{"name":"lastKnownFlagValidity","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html#/s:12LaunchDarkly21ConnectionInformationV010lastFailedC010Foundation4DateVSgvp":{"name":"lastFailedConnection","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html#/s:12LaunchDarkly21ConnectionInformationV07currentC4ModeAC0cF0Ovp":{"name":"currentConnectionMode","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html#/s:12LaunchDarkly21ConnectionInformationV04lastC13FailureReasonAC04LastcfG0Ovp":{"name":"lastConnectionFailureReason","abstract":"<p>Undocumented</p>","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"ConnectionInformation"},"Structs/ConnectionInformation.html":{"name":"ConnectionInformation","abstract":"<p>Undocumented</p>"},"Connection%20Information.html#/s:12LaunchDarkly30LDConnectionModeChangedHandlera":{"name":"LDConnectionModeChangedHandler","abstract":"<p>A closure used to notify an observer owner that the current connection mode has changed.</p>"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV3keySSvp":{"name":"key","abstract":"<p>The key of the changed feature flag</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV8oldValueAA7LDValueOvp":{"name":"oldValue","abstract":"<p>The feature flag&rsquo;s value before the change.</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV8newValueAA7LDValueOvp":{"name":"newValue","abstract":"<p>The feature flag&rsquo;s value after the change.</p>","parent_name":"LDChangedFlag"},"Flag%20Change%20Observers.html#/s:12LaunchDarkly15LDObserverOwnera":{"name":"LDObserverOwner","abstract":"<p>An object can own an observer for as long as the object exists. Swift structs and enums cannot be observer owners.</p>"},"Structs/LDChangedFlag.html":{"name":"LDChangedFlag","abstract":"<p>Collects the elements of a feature flag that changed as a result of the SDK receiving an update.</p>"},"Flag%20Change%20Observers.html#/s:12LaunchDarkly19LDFlagChangeHandlera":{"name":"LDFlagChangeHandler","abstract":"<p>A closure used to notify an observer owner of a change to a single feature flag&rsquo;s value.</p>"},"Flag%20Change%20Observers.html#/s:12LaunchDarkly29LDFlagCollectionChangeHandlera":{"name":"LDFlagCollectionChangeHandler","abstract":"<p>A closure used to notify an observer owner of a change to the feature flags in a collection of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code>.</p>"},"Flag%20Change%20Observers.html#/s:12LaunchDarkly23LDFlagsUnchangedHandlera":{"name":"LDFlagsUnchangedHandler","abstract":"<p>A closure used to notify an observer owner that a feature flag request resulted in no changes to any feature flag.</p>"},"Enums/LDValue.html#/s:s26ExpressibleByStringLiteralP0cD4TypeQa":{"name":"StringLiteralType","parent_name":"LDValue"},"Enums/LDValue.html#/s:s25ExpressibleByArrayLiteralP0cD7ElementQa":{"name":"ArrayLiteralElement","parent_name":"LDValue"},"Enums/LDValue.html#/s:s30ExpressibleByDictionaryLiteralP3KeyQa":{"name":"Key","parent_name":"LDValue"},"Enums/LDValue.html#/s:s30ExpressibleByDictionaryLiteralP5ValueQa":{"name":"Value","parent_name":"LDValue"},"Enums/LDValue.html#/s:s27ExpressibleByIntegerLiteralP0cD4TypeQa":{"name":"IntegerLiteralType","parent_name":"LDValue"},"Enums/LDValue.html#/s:s25ExpressibleByFloatLiteralP0cD4TypeQa":{"name":"FloatLiteralType","parent_name":"LDValue"},"Enums/LDValue.html#/s:12LaunchDarkly7LDValueO4nullyA2CmF":{"name":"null","abstract":"<p>Represents a JSON null value.</p>","parent_name":"LDValue"},"Enums/LDValue.html#/s:12LaunchDarkly7LDValueO4boolyACSbcACmF":{"name":"bool(_:)","abstract":"<p>Represents a JSON boolean value.</p>","parent_name":"LDValue"},"Enums/LDValue.html#/s:12LaunchDarkly7LDValueO6numberyACSdcACmF":{"name":"number(_:)","abstract":"<p>Represents a JSON number value.</p>","parent_name":"LDValue"},"Enums/LDValue.html#/s:12LaunchDarkly7LDValueO6stringyACSScACmF":{"name":"string(_:)","abstract":"<p>Represents a JSON string value.</p>","parent_name":"LDValue"},"Enums/LDValue.html#/s:12LaunchDarkly7LDValueO5arrayyACSayACGcACmF":{"name":"array(_:)","abstract":"<p>Represents an array of JSON values.</p>","parent_name":"LDValue"},"Enums/LDValue.html#/s:12LaunchDarkly7LDValueO6objectyACSDySSACGcACmF":{"name":"object(_:)","abstract":"<p>Represents a JSON object.</p>","parent_name":"LDValue"},"Enums/LDValue.html#/s:s23ExpressibleByNilLiteralP03nilD0xyt_tcfc":{"name":"init(nilLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc":{"name":"init(stringLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc":{"name":"init(arrayLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc":{"name":"init(dictionaryLiteral:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"LDValue"},"Enums/LDValue.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"LDValue"},"Classes/LDEvaluationDetail.html#/s:12LaunchDarkly18LDEvaluationDetailC5valuexvp":{"name":"value","abstract":"<p>The value of the flag for the current context.</p>","parent_name":"LDEvaluationDetail"},"Classes/LDEvaluationDetail.html#/s:12LaunchDarkly18LDEvaluationDetailC14variationIndexSiSgvp":{"name":"variationIndex","abstract":"<p>The index of the returned value within the flag&rsquo;s list of variations, or <code>nil</code> if the default was returned.</p>","parent_name":"LDEvaluationDetail"},"Classes/LDEvaluationDetail.html#/s:12LaunchDarkly18LDEvaluationDetailC6reasonSDySSAA7LDValueOGSgvp":{"name":"reason","abstract":"<p>A structure representing the main factor that influenced the resultant flag evaluation value.</p>","parent_name":"LDEvaluationDetail"},"Structs/LDMultiContextBuilder.html#/s:12LaunchDarkly21LDMultiContextBuilderVACycfc":{"name":"init()","abstract":"<p>Create a new LDMultiContextBuilder with the provided <code>key</code>.</p>","parent_name":"LDMultiContextBuilder"},"Structs/LDMultiContextBuilder.html#/s:12LaunchDarkly21LDMultiContextBuilderV03addD0yyAA9LDContextVF":{"name":"addContext(_:)","abstract":"<p>Adds a nested context for a specific kind to a LDMultiContextBuilder.</p>","parent_name":"LDMultiContextBuilder"},"Structs/LDMultiContextBuilder.html#/s:12LaunchDarkly21LDMultiContextBuilderV5builds6ResultOyAA9LDContextVAA0dE5ErrorOGyF":{"name":"build()","abstract":"<p>Creates a LDContext from the current properties.</p>","parent_name":"LDMultiContextBuilder"},"Structs/Reference.html#/s:12LaunchDarkly9ReferenceVyACSScfc":{"name":"init(_:)","abstract":"<p>Construct a new Reference.</p>","parent_name":"Reference"},"Structs/Reference.html#/s:12LaunchDarkly9ReferenceV7literalACSS_tcfc":{"name":"init(literal:)","abstract":"<p>Undocumented</p>","parent_name":"Reference"},"Structs/Reference.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"Reference"},"Structs/Reference.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"Reference"},"Structs/Reference.html#/s:12LaunchDarkly9ReferenceV7isValidSbyF":{"name":"isValid()","abstract":"<p>Returns whether or not the reference provided is valid.</p>","parent_name":"Reference"},"Structs/Reference.html#/s:12LaunchDarkly9ReferenceV8getErrorAA0cE0OSgyF":{"name":"getError()","abstract":"<p>If the reference is invalid, this method will return an error description; otherwise, it","parent_name":"Reference"},"Structs/Reference.html#/s:12LaunchDarkly9ReferenceV3rawSSyF":{"name":"raw()","abstract":"<p>Returns raw string that was passed into constructor.</p>","parent_name":"Reference"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderVACycfc":{"name":"init()","abstract":"<p>Create a new LDContextBuilder.</p>","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV3keyACSS_tcfc":{"name":"init(key:)","abstract":"<p>Create a new LDContextBuilder with the provided <code>key</code>.</p>","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV4kindyySSF":{"name":"kind(_:)","abstract":"<p>Sets the LDContext&rsquo;s kind attribute.</p>","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV3keyyySSF":{"name":"key(_:)","abstract":"<p>Sets the LDContext&rsquo;s key attribute.</p>","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV4nameyySSF":{"name":"name(_:)","abstract":"<p>Sets the LDContext&rsquo;s name attribute.</p>","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV11trySetValueySbSS_AA7LDValueOtF":{"name":"trySetValue(_:_:)","abstract":"<p>Sets the value of any attribute for the Context except for private attributes.</p>","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV9anonymousyySbF":{"name":"anonymous(_:)","abstract":"<p>Sets whether the LDContext is only intended for flag evaluations and should not be indexed by","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV19addPrivateAttributeyyAA9ReferenceVF":{"name":"addPrivateAttribute(_:)","abstract":"<p>Provide a reference to designate any number of LDContext attributes as private: that is,","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV22removePrivateAttributeyyAA9ReferenceVF":{"name":"removePrivateAttribute(_:)","abstract":"<p>Remove any reference provided through <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV19addPrivateAttributeyyAA9ReferenceVF\">addPrivateAttribute(_:)</a></code>. If the reference was","parent_name":"LDContextBuilder"},"Structs/LDContextBuilder.html#/s:12LaunchDarkly16LDContextBuilderV5builds6ResultOyAA0C0VAA07ContextD5ErrorOGyF":{"name":"build()","abstract":"<p>Creates a LDContext from the current LDContextBuilder properties.</p>","parent_name":"LDContextBuilder"},"Structs/LDContext.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"LDContext"},"Structs/LDContext.html#/s:12LaunchDarkly9LDContextV17fullyQualifiedKeySSyF":{"name":"fullyQualifiedKey()","abstract":"<p>FullyQualifiedKey returns a string that describes the entire Context based on Kind and Key values.</p>","parent_name":"LDContext"},"Structs/LDContext.html#/s:12LaunchDarkly9LDContextV7isMultiSbyF":{"name":"isMulti()","parent_name":"LDContext"},"Structs/LDContext.html#/s:12LaunchDarkly9LDContextV11contextKeysSDyS2SGyF":{"name":"contextKeys()","abstract":"<p>/ - Returns: A hash mapping a context&rsquo;s kind to its key.</p>","parent_name":"LDContext"},"Structs/LDContext.html#/s:12LaunchDarkly9LDContextV8getValueyAA7LDValueOSgAA9ReferenceVF":{"name":"getValue(_:)","abstract":"<p>Looks up the value of any attribute of the <code>LDContext</code>, or a value contained within an","parent_name":"LDContext"},"Structs/LDContext.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"LDContext"},"Structs/LDConfig/Minima.html#/s:12LaunchDarkly8LDConfigV6MinimaV19flagPollingIntervalSdvp":{"name":"flagPollingInterval","abstract":"<p>The minimum time interval between feature flag requests. Used only for polling mode. (5 minutes)</p>","parent_name":"Minima"},"Structs/LDConfig/Minima.html#/s:12LaunchDarkly8LDConfigV6MinimaV29backgroundFlagPollingIntervalSdvp":{"name":"backgroundFlagPollingInterval","abstract":"<p>The minimum time interval between feature flag requests while running in the background. Used only for polling mode. (15 minutes)</p>","parent_name":"Minima"},"Structs/LDConfig/Minima.html#/s:12LaunchDarkly8LDConfigV6MinimaV27diagnosticRecordingIntervalSdvp":{"name":"diagnosticRecordingInterval","abstract":"<p>The minimum time interval between sending periodic diagnostic data. (5 minutes)</p>","parent_name":"Minima"},"Structs/LDConfig/Constants.html#/s:12LaunchDarkly8LDConfigV9ConstantsV22primaryEnvironmentNameSSvpZ":{"name":"primaryEnvironmentName","abstract":"<p>The default environment name that must be present in a single or multiple environment configuration</p>","parent_name":"Constants"},"Structs/LDConfig/Constants.html":{"name":"Constants","abstract":"<p>Constants relevant to setting up an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDConfig.html\">LDConfig</a></code></p>","parent_name":"LDConfig"},"Structs/LDConfig/Minima.html":{"name":"Minima","abstract":"<p>The minimum values allowed to be set into LDConfig.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9mobileKeySSvp":{"name":"mobileKey","abstract":"<p>The Mobile key from your <a href=\"app.launchdarkly.com\">LaunchDarkly Account</a> settings (on the left at the bottom). If you have multiple projects be sure to choose the correct Mobile key.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV7baseUrl10Foundation3URLVvp":{"name":"baseUrl","abstract":"<p>The base url for making feature flag requests. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9eventsUrl10Foundation3URLVvp":{"name":"eventsUrl","abstract":"<p>The base url for making event reports. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9streamUrl10Foundation3URLVvp":{"name":"streamUrl","abstract":"<p>The base url for connecting to the streaming service. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV13eventCapacitySivp":{"name":"eventCapacity","abstract":"<p>The maximum number of analytics events the LDClient can store. When the LDClient event store reaches the eventCapacity, the SDK discards events until it successfully reports them to LaunchDarkly. (Default: 100)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV17connectionTimeoutSdvp":{"name":"connectionTimeout","abstract":"<p>The timeout interval for flag requests and event reports. (Default: 10 seconds)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV18eventFlushIntervalSdvp":{"name":"eventFlushInterval","abstract":"<p>The time interval between event reports (Default: 30 seconds)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV19flagPollingIntervalSdvp":{"name":"flagPollingInterval","abstract":"<p>The time interval between feature flag requests. Used only for polling mode. (Default: 5 minutes)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV29backgroundFlagPollingIntervalSdvp":{"name":"backgroundFlagPollingInterval","abstract":"<p>The time interval between feature flag requests while running in the background. Used only for polling mode. (Default: 60 minutes)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV15applicationInfoAA011ApplicationE0VSgvp":{"name":"applicationInfo","abstract":"<p>The configuration for application metadata.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV13streamingModeAA011LDStreamingE0Ovp":{"name":"streamingMode","abstract":"<p>Controls the method the SDK uses to keep feature flags updated. (Default: <code>.streaming</code>)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV23enableBackgroundUpdatesSbvp":{"name":"enableBackgroundUpdates","abstract":"<p>Enables feature flag updates when your app is in the background. Allowed on macOS only. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11startOnlineSbvp":{"name":"startOnline","abstract":"<p>Controls LDClient start behavior. When true, calling start causes LDClient to go online. When false, calling start causes LDClient to remain offline. If offline at start, set the client online to receive flag updates. (Default: true)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV27allContextAttributesPrivateSbvp":{"name":"allContextAttributesPrivate","abstract":"<p>Treat all context attributes as private for event reporting for all contexts.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV24privateContextAttributesSayAA9ReferenceVGvp":{"name":"privateContextAttributes","abstract":"<p>Context attributes and top level custom dictionary keys to treat as private for event reporting for all contexts.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9useReportSbvp":{"name":"useReport","abstract":"<p>Directs the SDK to use REPORT for HTTP requests for feature flag data. (Default: <code>false</code>)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11isDebugModeSbvp":{"name":"isDebugMode","abstract":"<p>Enables logging for debugging. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV17evaluationReasonsSbvp":{"name":"evaluationReasons","abstract":"<p>Enables requesting evaluation reasons for all flags. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV17maxCachedContextsSivp":{"name":"maxCachedContexts","abstract":"<p>An Integer that tells ContextEnvironmentFlagCache the maximum number of contexts to locally cache. Can be set to -1 for unlimited cached contexts.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV16diagnosticOptOutSbvp":{"name":"diagnosticOptOut","abstract":"<p>Set to true to opt out of sending diagnostic data. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV27diagnosticRecordingIntervalSdvp":{"name":"diagnosticRecordingInterval","abstract":"<p>The interval between sending periodic diagnostic data. (Default: 15 minutes)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11wrapperNameSSSgvp":{"name":"wrapperName","abstract":"<p>For use by wrapper libraries to set an identifying name for the wrapper being used. This will be sent in the &ldquo;X-LaunchDarkly-Wrapper&rdquo; header on requests to the LaunchDarkly servers to allow recording metrics on the usage of wrapper libraries. (Default: nil)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV14wrapperVersionSSSgvp":{"name":"wrapperVersion","abstract":"<p>For use by wrapper libraries to report the version of the library in use. If the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11wrapperNameSSSgvp\">wrapperName</a></code> has not been set this field will be ignored. Otherwise the version string will be included with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11wrapperNameSSSgvp\">wrapperName</a></code> in the &ldquo;X-LaunchDarkly-Wrapper&rdquo; header on requests to the LaunchDarkly servers. (Default: nil)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV17additionalHeadersSDyS2SGvp":{"name":"additionalHeaders","abstract":"<p>Additional headers that should be added to all HTTP requests from SDK components to LaunchDarkly services</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV14headerDelegateSDyS2SG10Foundation3URLV_AEtcSgvp":{"name":"headerDelegate","abstract":"<p>a closure to allow dynamic changes of headers on connect &amp; reconnect</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV17autoEnvAttributesSbvp":{"name":"autoEnvAttributes","abstract":"<p>Set to true to opt in to automatically sending mobile environment attributes.  This data makes it simpler to target mobile customers","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV6minimaAC6MinimaVvp":{"name":"minima","abstract":"<p>LaunchDarkly defined minima for selected configurable items</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV12objcLdConfigAA04ObjcC0Cvp":{"name":"objcLdConfig","abstract":"<p>An NSObject wrapper for the Swift LDConfig struct. Intended for use in mixed apps when Swift code needs to pass a config into an Objective-C method.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV22setSecondaryMobileKeysyySDyS2SGKF":{"name":"setSecondaryMobileKeys(_:)","abstract":"<p>Sets a Dictionary of identifying names to unique mobile keys to access secondary environments in the LDConfig. Throws <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/LDInvalidArgumentError.html\">LDInvalidArgumentError</a></code> if you try to add duplicate keys or put the primary key or name in secondaryMobileKeys.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV22getSecondaryMobileKeysSDyS2SGyF":{"name":"getSecondaryMobileKeys()","abstract":"<p>Returns a Dictionary of identifying names to unique mobile keys to access secondary environments.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9mobileKey17autoEnvAttributesACSS_AA04AutogH0Otcfc":{"name":"init(mobileKey:autoEnvAttributes:)","abstract":"<p>LDConfig constructor. Configurable values are all set to their default values. The client app can modify these values as desired.","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares the settable properties in 2 LDConfig structs</p>","parent_name":"LDConfig"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC8isOnlineSbvp":{"name":"isOnline","abstract":"<p>Reports the online/offline state of the LDClient.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC13isInitializedSbvp":{"name":"isInitialized","abstract":"<p>Reports the initialization state of the LDClient.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC9setOnline_10completionySb_yycSgtF":{"name":"setOnline(_:completion:)","abstract":"<p>Set the LDClient online/offline.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC24getConnectionInformationAA0eF0VyF":{"name":"getConnectionInformation()","abstract":"<p>Returns an object containing information about successful and/or failed polling or streaming connections to LaunchDarkly</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC5closeyyF":{"name":"close()","abstract":"<p>Stops the LDClient. Stopping the client means the LDClient goes offline and stops recording events. LDClient will no longer provide feature flag values, only returning default values.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC8identify7context10completionyAA9LDContextV_yycSgtF":{"name":"identify(context:completion:)","abstract":"<p>The LDContext set into the LDClient may affect the set of feature flags returned by the LaunchDarkly server, and ties event tracking to the context. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code> for details about what information can be retained.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC8allFlagsSDySSAA7LDValueOGSgvp":{"name":"allFlags","abstract":"<p>Returns a dictionary with the flag keys and their values. If the <code>LDClient</code> is not started, returns <code>nil</code>.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC7observe3key5owner7handlerySS_yXlyAA13LDChangedFlagVctF":{"name":"observe(key:owner:handler:)","abstract":"<p>Sets a handler for the specified flag key executed on the specified owner. If the flag&rsquo;s value changes, executes the handler, passing in the <code>changedFlag</code> containing the old and new flag values. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code> for details.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC7observe4keys5owner7handlerySaySSG_yXlySDySSAA13LDChangedFlagVGctF":{"name":"observe(keys:owner:handler:)","abstract":"<p>Sets a handler for the specified flag keys executed on the specified owner. If any observed flag&rsquo;s value changes, executes the handler 1 time, passing in a dictionary of [LDFlagKey: LDChangedFlag] containing the old and new flag values. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code> for details.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC10observeAll5owner7handleryyXl_ySDySSAA13LDChangedFlagVGctF":{"name":"observeAll(owner:handler:)","abstract":"<p>Sets a handler for all flag keys executed on the specified owner. If any flag&rsquo;s value changes, executes the handler 1 time, passing in a dictionary of [LDFlagKey: LDChangedFlag] containing the old and new flag values. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code> for details.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC21observeFlagsUnchanged5owner7handleryyXl_yyctF":{"name":"observeFlagsUnchanged(owner:handler:)","abstract":"<p>Sets a handler executed when a flag update leaves the flags unchanged from their previous values.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC28observeCurrentConnectionMode5owner7handleryyXl_yAA0F11InformationV0fG0OctF":{"name":"observeCurrentConnectionMode(owner:handler:)","abstract":"<p>Sets a handler executed when ConnectionInformation.currentConnectionMode changes.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC13stopObserving5owneryyXl_tF":{"name":"stopObserving(owner:)","abstract":"<p>Removes all observers for the given owner, including the flagsUnchangedObserver</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC5track3key4data11metricValueySS_AA7LDValueOSgSdSgtF":{"name":"track(key:data:metricValue:)","abstract":"<p>Adds a custom event to the LDClient event store. A client app can set a tracking event to allow client customized data analysis. Once an app has called <code>track</code>, the app cannot remove the event from the event store.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC5flushyyF":{"name":"flush()","abstract":"<p>Tells the SDK to immediately send any currently queued events to LaunchDarkly.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC5start6config7context10completionyAA8LDConfigV_AA9LDContextVSgyycSgtFZ":{"name":"start(config:context:completion:)","abstract":"<p>Starts the LDClient using the passed in <code>config</code> &amp; <code>context</code>. Call this before requesting feature flag values. The LDClient will not go online until you call this method.","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC5start6config7context0D11WaitSeconds10completionyAA8LDConfigV_AA9LDContextVSgSdySbcSgtFZ":{"name":"start(config:context:startWaitSeconds:completion:)","abstract":"<p>See <a href=\"x-source-tag://start\">start</a> for more information on starting the SDK.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC3get11environmentACSgSS_tFZ":{"name":"get(environment:)","abstract":"<p>Returns the LDClient instance for a given environment.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC13boolVariation6forKey12defaultValueSbSS_SbtF":{"name":"boolVariation(forKey:defaultValue:)","abstract":"<p>Returns the boolean value of a feature flag for a given flag key.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC19boolVariationDetail6forKey12defaultValueAA012LDEvaluationF0CySbGSS_SbtF":{"name":"boolVariationDetail(forKey:defaultValue:)","abstract":"<p>Returns the boolean value of a feature flag for a given flag key, in an object that also describes the way the","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC12intVariation6forKey12defaultValueSiSS_SitF":{"name":"intVariation(forKey:defaultValue:)","abstract":"<p>Returns the integer value of a feature flag for a given flag key.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC18intVariationDetail6forKey12defaultValueAA012LDEvaluationF0CySiGSS_SitF":{"name":"intVariationDetail(forKey:defaultValue:)","abstract":"<p>Returns the integer value of a feature flag for a given flag key, in an object that also describes the way the","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC15doubleVariation6forKey12defaultValueSdSS_SdtF":{"name":"doubleVariation(forKey:defaultValue:)","abstract":"<p>Returns the double-precision floating-point value of a feature flag for a given flag key.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC21doubleVariationDetail6forKey12defaultValueAA012LDEvaluationF0CySdGSS_SdtF":{"name":"doubleVariationDetail(forKey:defaultValue:)","abstract":"<p>Returns the double-precision floating-point value of a feature flag for a given flag key, in an object that also","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC15stringVariation6forKey12defaultValueS2S_SStF":{"name":"stringVariation(forKey:defaultValue:)","abstract":"<p>Returns the string value of a feature flag for a given flag key.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC21stringVariationDetail6forKey12defaultValueAA012LDEvaluationF0CySSGSS_SStF":{"name":"stringVariationDetail(forKey:defaultValue:)","abstract":"<p>Returns the string value of a feature flag for a given flag key, in an object that also describes the way the","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC13jsonVariation6forKey12defaultValueAA7LDValueOSS_AHtF":{"name":"jsonVariation(forKey:defaultValue:)","abstract":"<p>Returns the JSON value of a feature flag for a given flag key.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC19jsonVariationDetail6forKey12defaultValueAA012LDEvaluationF0CyAA7LDValueOGSS_AJtF":{"name":"jsonVariationDetail(forKey:defaultValue:)","abstract":"<p>Returns the JSON value of a feature flag for a given flag key, in an object that also describes the way the","parent_name":"LDClient"},"Classes/LDClient.html":{"name":"LDClient","abstract":"<p>The LDClient is the heart of the SDK, providing client apps running iOS, watchOS, macOS, or tvOS access to LaunchDarkly services. This singleton provides the ability to set a configuration (LDConfig) that controls how the LDClient talks to LaunchDarkly servers, and a contexts (LDContext) that provides finer control on the feature flag values delivered to LDClient. Once the LDClient has started, it connects to LaunchDarkly&rsquo;s servers to get the feature flag values you set in the Dashboard.</p>"},"Structs/LDConfig.html":{"name":"LDConfig","abstract":"<p>Use LDConfig to configure the LDClient. When initialized, a LDConfig contains the default values which can be changed as needed.</p>"},"Structs/LDContext.html":{"name":"LDContext","abstract":"<p>LDContext is a collection of attributes that can be referenced in flag evaluations and analytics"},"Structs/LDContextBuilder.html":{"name":"LDContextBuilder","abstract":"<p>Contains methods for building a single kind <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDContext.html\">LDContext</a></code> with a specified key, defaulting to kind"},"Structs/Reference.html":{"name":"Reference","abstract":"<p>Represents an attribute name or path expression identifying a value within a Context.</p>"},"Structs/LDMultiContextBuilder.html":{"name":"LDMultiContextBuilder","abstract":"<p>Contains method for building a multi-context.</p>"},"Classes/LDEvaluationDetail.html":{"name":"LDEvaluationDetail","abstract":"<p>An object returned by the SDK&rsquo;s <code>variationDetail</code> methods, combining the result of a flag evaluation with an"},"Enums/LDValue.html":{"name":"LDValue","abstract":"<p>An immutable instance of any data type that is allowed in JSON.</p>"},"Core%20Classes.html":{"name":"Core Classes"},"Flag%20Change%20Observers.html":{"name":"Flag Change Observers"},"Connection%20Information.html":{"name":"Connection Information"},"Other%20Types.html":{"name":"Other Types"},"Objective-C%20Core%20Interfaces.html":{"name":"Objective-C Core Interfaces"},"Objective-C%20EvaluationDetail%20Wrappers.html":{"name":"Objective-C EvaluationDetail Wrappers"},"Other%20Guides.html":{"name":"Other Guides","abstract":"<p>The following guides are available globally.</p>"},"Other%20Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other%20Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"}}